stages:
  - linting
  - vet_n_test
  - containerize

before_script:
  - mkdir -p /go/src/nsd-utvikling /go/src/_/builds
  - cp -r $CI_PROJECT_DIR /go/src/nsd-utvikling/carsten-coffee-api
  - ln -s /go/src/nsd-utvikling /go/src/_/builds/nsd-utvikling

golang linting:
  stage: linting
  image: golang:latest
  script:
    - go get -u golang.org/x/lint/golint
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)

vetting and running the test suite:
  stage: vet_n_test
  image: golang:latest
  script:
    - cd /go/src/nsd-utvikling/carsten-coffee-api
    - go get -u github.com/jstemmer/go-junit-report
    - go get -u github.com/kardianos/govendor
    - govendor sync
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -v 2>&1 | go-junit-report > report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

containerizing:
  stage: containerize
  image: docker:18
  script:
    - echo "$DOCKER_BUILDER_CERT_PEM" > /root/cert.pem
    - echo "$DOCKER_BUILDER_KEY_PEM" > /root/key.pem
    - echo "$DOCKER_BUILDER_CA_PEM" > /root/ca.pem
    - export DOCKER_TLS_VERIFY="1"
    - export DOCKER_HOST="$DOCKER_BUILDER_HOST"
    - export DOCKER_CERT_PATH="/root"
    - docker build -t carsten-coffee-api:latest .

